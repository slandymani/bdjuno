type Query {
    action_vote_proposals(
        height: Int
    ): ActionGovModules

    action_voting_result(
        id: Int!
    ): ActionVotingResult

    action_proposals_statistics():

    action_account_balance(
        address: String!
        height: Int
    ): ActionBalance

    action_top_accounts(
        limit: Int
        offset: Int
        sorting_by: String
    ): ActionTopAccounts

    action_delegation_reward(
        address: String!
        height: Int
    ): [ActionDelegationReward]

    action_delegator_withdraw_address(
        address: String!
    ): ActionAddress!

    action_delegation(
        address: String!
        height: Int
        offset: Int
        limit: Int
        count_total: Boolean
    ): ActionDelegationResponse

    action_delegation_total(
        address: String!
        height: Int
    ): ActionBalance

    action_redelegation(
        address: String!
        height: Int
        offset: Int
        limit: Int
        count_total: Boolean
    ): ActionRedelegationResponse

    action_unbonding_delegation(
        address: String!
        height: Int
        offset: Int
        limit: Int
        count_total: Boolean
    ): ActionUnbondingDelegationResponse

     action_unbonding_delegation_total(
        address: String!
        height: Int
    ): ActionBalance

    action_validator_commission_amount(
        address: String!
    ): ActionValidatorCommissionAmount

    action_validator_delegations(
        address: String!
        offset: Int
        limit: Int
        count_total: Boolean
    ): ActionDelegationResponse

    action_validator_redelegations_from(
        address: String!
        height: Int
        offset: Int
        limit: Int
        count_total: Boolean
    ): ActionRedelegationResponse

    action_validator_unbonding_delegations(
        address: String!
        offset: Int
        limit: Int
        count_total: Boolean
    ): ActionUnbondingDelegationResponse
}

type ActionGovModules {
    gov_modules: [ActionModuleVoteProposal]
}

type ActionVotingResult {
    count: ActionVotingResultCount
    weighted: ActionVotingResultWeighted
}

type ActionVotingResultCount {
    yes: Int!
    no: Int!
    no_with_veto: Int!
    abstain: Int!
    total_count: Int!
}

type ActionVotingResultWeighted {
    yes: String!
    no: String!
    no_with_veto: String!
    abstain: String!
}

type ActionModuleVoteProposal {
    vote_proposals: [ActionVoteProposal]
}

type ActionVoteProposal {
    key: String!
    value_type: String!
}

type ActionModuleProposalsStatistics {
    statuses: [ActionProposalStatus]
}

type ActionProposalStatus {
    status: String!
    count: Int!
}

type ActionBalance {
    coins: [ActionCoin]
}

type ActionTopAccounts {
    accounts: [ActionTopAccount]
    total_count: Int!
}

type ActionTopAccount {
    address: String!
    loki_balance: Int!
    mgeo_balance: Int!
    all_balances: [ActionCoin]
    delegated_amount: Int!
    tx_number: Int!
}

type ActionDelegationReward {
  coins: [ActionCoin]
  validator_address: String!
}

type ActionAddress {
    address: String!
}

type ActionDelegationResponse {
    delegations: [ActionDelegation]
    pagination: ActionPagination
}

type ActionRedelegationResponse {
    redelegations: [ActionRedelegation]
    pagination: ActionPagination
}

type ActionUnbondingDelegationResponse {
    unbonding_delegations: [ActionUnbondingDelegation]
    pagination: ActionPagination
}

type ActionValidatorCommissionAmount {
    coins: [ActionCoin]
}

scalar ActionCoin
scalar ActionDelegation
scalar ActionEntry
scalar ActionPagination
scalar ActionRedelegation
scalar ActionUnbondingDelegation

